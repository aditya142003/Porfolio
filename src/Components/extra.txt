import React, { useState, useEffect } from "react";
import "./Style/ImageArea.css";
import originalLeft from "./Images/originalLeft.png";
import originalRight from "./Images/originalRight.png";
import PaintedRight from "./Images/paintedRight.png";
import PaintedLeft from "./Images/paintedLeft.png";

function ImageArea() {
  const [opri, setopri] = useState(100);
  const [opli, setopli] = useState(100);
  const [opacityr, setopacityr] = useState(50);
  const [opacityl, setopacityl] = useState(50);
  const [mousePos, setMousePos] = useState({});
  // const [classr, setclassr] = useState(false);
  // const [classl, setclassl] = useState(false);

  // let leftimagepainted = document.querySelector(".leftimagepainted");
  // let rightimageoriginal = document.querySelector(".rightimageoriginal");

  useEffect(() => {
    const handleMouseMove = (event) => {
      setMousePos({ x: event.clientX, y: event.clientY });
      if (mousePos.x < 720 && mousePos.y > 290 && mousePos.y < 810) {
        setopri(0);
        setopacityl(100);
        setopacityr(50);
        // leftimagepainted.style.animationName = "none";
        // requestAnimationFrame(() => {
        //   rightimageoriginal.style.animationName = "none";
        //   leftimagepainted.style.animationName = "";
        // });
      } else if (
        mousePos.x > 721 &&
        mousePos.x < 1230 &&
        mousePos.y > 294 &&
        mousePos.y < 810
      ) {
        setopri(100);
        setopli(100);
      } else if (mousePos.x > 1231 && mousePos.y > 290 && mousePos.y < 810) {
        setopli(0);
        setopacityr(100);
        setopacityl(50);
        // rightimageoriginal.style.animationName = "none";
        // requestAnimationFrame(() => {
        //   leftimagepainted.style.animationName = "none";
        //   rightimageoriginal.style.animationName = "";
        // });
      } else {
        setopli(100);
        setopri(100);
        setopacityr(50);
        setopacityl(50);
        // setclassr(false);
        // setclassl(false);
      }
    };
    window.addEventListener("mousemove", handleMouseMove);
  });
  //   const handleMouseMove = (event) => {
  //     setMousePos({ x: event.clientX, y: event.clientY });
  //     if (mousePos.x < 660 && mousePos.y > 290 && mousePos.y < 810) {
  //       setopri(0);
  //       setopacityl(100);
  //       setopacityr(50);
  //       setclassr(true);
  //       setclassl(false);
  //     } else if (mousePos.x > 661 && mousePos.x < 720 && mousePos.y > 290 && mousePos.y < 810) {
  //       setopri(0);
  //       setclassr(false);
  //       setclassl(false);
  //     }else if (mousePos.x > 721 && mousePos.x < 1170 && mousePos.y > 294 && mousePos.y < 810) {
  //       setopri(100);
  //       setopli(100);
  //       setclassr(true);
  //       setclassl(true);
  //     } else if (mousePos.x > 1171 && mousePos.x < 1230 && mousePos.y > 200 && mousePos.y < 740) {
  //       setopli(0);
  //       setclassr(false);
  //       setclassl(false);
  //     }else if (mousePos.x > 1231 && mousePos.y > 290 && mousePos.y < 810) {
  //       setopli(0);
  //       setopacityr(100);
  //       setopacityl(50);
  //       setclassr(false);
  //       setclassl(true);
  //     }else {
  //       setopli(100);
  //       setopri(100);
  //       setopacityr(50);
  //       setopacityl(50);
  //       // setclassr(false);
  //       // setclassl(false);
  //     }
  //   };
  //   window.addEventListener("mousemove", handleMouseMove);
  // });

  return (
    <>
      {/* <div>4                             4{mousePos.x},{mousePos.y}</div> */}
      <div className="parent">
        <p
          style={{
            fontSize: "40px",
            opacity: `${opacityl}%`,
            cursor: "pointer",
            position: "relative",
            left: "130px",
          }}
        >
          Frontend Developer
        </p>
        <div
          style={{
            position: "relative",
            display: "flex",
          }}
        >
          <img
            src={originalLeft}
            className="leftimageoriginal"
            style={{ zIndex: "1" }}
          ></img>
          <img
            src={PaintedLeft}
            style={{ height: "530px", zIndex: "2", opacity: `${opli}%` }}
            // className={
            //   classl ? "leftimagepainted addition" : "leftimagepainted "
            // }
            className="leftimagepainted"
          ></img>
        </div>
        <div style={{ display: "flex", position: "relative " }}>
          <img
            src={originalRight}
            // className={
            //   classr ? "rightimageoriginal addition" : "rightimageoriginal "
            // }
            className="rightimageoriginal"
            style={{ zIndex: "2", opacity: `${opri}%` }}
          ></img>
          <img
            src={PaintedRight}
            style={{ height: "530px", zIndex: "1" }}
            className="rightimagepainted"
          ></img>
        </div>
        <p
          style={{
            fontSize: "40px",
            opacity: `${opacityr}%`,
            cursor: "pointer",
          }}
        >
          Programmer
        </p>
      </div>
    </>
  );
}

export default ImageArea;
